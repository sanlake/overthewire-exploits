#!/usr/bin/python3.9

"""This script is a solution to Overthewire Bandit level 31."""

from git import Repo
from git import exc
from tempfile import TemporaryDirectory
from shutil import which

if which("sshpass") is None:
    exit("[ERROR] sshpass command not found.")

temp_dir = TemporaryDirectory()

git_ssh_command = ' '.join([
    "sshpass -p OoffzGDlzhAlerFJ2cAiz1D41JW1Mhmt", 
    "ssh -o StrictHostKeyChecking=no",
    "-o UserKnownHostsFile=/dev/null -p 2220"])

path = "/home/bandit31-git/repo"
remote = f"ssh://bandit31-git@bandit.labs.overthewire.org{path}"

repo = Repo.clone_from(remote, temp_dir.name, env={"GIT_SSH_COMMAND":git_ssh_command})

with open(temp_dir.name+'/.gitignore', 'w') as f:
    f.write("")

with open(temp_dir.name+'/key.txt', 'w') as f:
    f.write("May I come in?")

repo.git.add('.')
repo.index.commit("create: file key.txt")
try:
    repo.git.push("origin","master")
except exc.GitCommandError as e:
    output = str(e).strip()

password = output.split("\n")[-7].strip()
password = password.split(" ")[-1]

if password and password.isalnum() and len(password) == 32:
    print("[PASSWORD]", password)
else:
    print(
        f"[FAIL]",
        f"[Password({len(password)}): {password}]")

temp_dir.cleanup()
